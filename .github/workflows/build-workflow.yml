name: build

on:
  push:
  pull_request:
    branches: [ main ]
    paths:
      - '**.cs'
      - '**.csproj'

env:
  DOTNET_VERSION: '8.0.x' # The .NET SDK version to use

jobs:
  build:
    permissions: write-all
    name: build-windows-latest
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install dependencies
        run: dotnet restore

      - name: Build
        run: dotnet publish --configuration Release --output "artifact-${{ env.DOTNET_VERSION }}" --self-contained
          
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifact-${{ env.DOTNET_VERSION }}
          path: artifact-${{ env.DOTNET_VERSION }}
          
  release:
    name: release-windows-latest
    runs-on: windows-latest
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    needs: build
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: ShineGfxGenerator-${{ github.ref }}
          draft: false
          prerelease: true
          
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with: 
          name: artifact-${{ env.DOTNET_VERSION }}
          
      - name: Create zip folder
        uses: thedoctor0/zip-release@master
        with: 
          filename: artifact.zip
      
      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_content_type: application/zip
          asset_name: ShineGfxGenerator-release-${{ github.ref }}
          asset_path: artifact-${{ env.DOTNET_VERSION }}
          upload_url: ${{ steps.create_release.outputs.upload_url }}